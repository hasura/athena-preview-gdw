### See the schema exposed by Node.js Express backend
GET http://localhost:8000/schema HTTP/1.1
Content-Type: application/json

### Reload Metadata
POST http://0.0.0.0:8080/v1/metadata HTTP/1.1
Content-Type: application/json

{
  "type": "reload_metadata",
  "args": {}
}

### Replace metadata (Gavin AWS region us-west-2 AthenaSQL tables)
POST http://0.0.0.0:8080/v1/metadata HTTP/1.1
Content-Type: application/json

{
  "type": "replace_metadata",
  "args": {
    "metadata": {
      "version": 3,
      "sources": [
        {
          "name": "db",
          "kind": "dynamic",
          "configuration": {
            "endpoint": "http://0.0.0.0:3000"
          },
          "tables": [
            {
              "table": "allusers_pipe_view",
              "select_permissions": [
                {
                  "role": "user",
                  "permission": {
                    "columns": ["userid"],
                    "filter": {
                      "userid": {
                        "_eq": "X-Hasura-User-Id"
                      }
                    }
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  }
}

### Replace metadata (Gavin AWS region us-east-1 AthenaSQL tables)
POST http://localhost:8085/v1/metadata HTTP/1.1
Content-Type: application/json

{
	"type": "replace_metadata",
	"args": {
		"metadata": {
			"version": 3,
			"sources": [{
				"name": "db",
				"kind": "dynamic",
				"configuration": {
					"endpoint": "http://localhost:3000"
				},
				"tables": [
          {
            "table": "allusers_pipe"
          },
          {
						"table": "artists",
						"array_relationships": [{
							"name": "albums_relationship",
							"using": {
								"manual_configuration": {
									"remote_table": "albums",
									"column_mapping": {
										"id": "artist_id"
									}
								}
							}
						}]
					},
					{
						"table": "albums",
						"object_relationships": [{
							"name": "artist_relationship",
							"using": {
								"manual_configuration": {
									"remote_table": "artists",
									"column_mapping": {
										"artist_id": "id"
									}
								}
							}
						}]
					}
				]
			}]
		}
	}
}

### Query example
POST http://localhost:8080/v1/graphql HTTP/1.1
X-Request-Type: GraphQL
Content-Type: application/json

query {
  allusers_pipe(where: {
    userid: { _lte: 20 },
    state: {_eq: "GA"},
  }) {
    userid
    city
    email
    firstname
    lastname
    phone
    state
    username
  }
}
